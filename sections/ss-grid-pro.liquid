{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign lazy = section.settings.lazy

  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align = section.settings.heading_align
  assign heading_align_mobile = section.settings.heading_align_mobile

  assign items_gap = section.settings.items_gap
  assign items_gap_mobile = section.settings.items_gap_mobile
  assign items_mt = section.settings.items_mt

  assign row_height = section.settings.row_height
  assign row_height_mobile = section.settings.row_height_mobile

  assign block_padding_vertical = section.settings.block_padding_vertical
  assign block_padding_vertical_mobile = section.settings.block_padding_vertical_mobile
  assign block_padding_horizontal = section.settings.block_padding_horizontal
  assign block_padding_horizontal_mobile = section.settings.block_padding_horizontal_mobile
  assign block_radius = section.settings.block_radius
  assign block_border_thickness = section.settings.block_border_thickness
  assign block_overlay = section.settings.block_overlay

  assign title_color = section.settings.title_color
  assign title_custom = section.settings.title_custom
  assign title_font = section.settings.title_font
  assign title_height = section.settings.title_height
  assign title_mt = section.settings.title_mt

  assign text_size = section.settings.text_size
  assign text_size_mobile = section.settings.text_size_mobile
  assign text_color = section.settings.text_color
  assign text_custom = section.settings.text_custom
  assign text_font = section.settings.text_font
  assign text_height = section.settings.text_height

  assign arrow_color = section.settings.arrow_color
  assign arrow_size_mobile = section.settings.arrow_size_mobile
  assign arrow_size = section.settings.arrow_size

  assign action_size_mobile = section.settings.action_size_mobile
  assign action_size = section.settings.action_size
  assign action_bg_color = section.settings.action_bg_color
  assign action_arrow_color = section.settings.action_arrow_color
-%}

{%- style -%}

  {{  heading_font | font_face: font_display: 'swap' }}
  {{  title_font | font_face: font_display: 'swap' }}
  {{  text_font | font_face: font_display: 'swap' }}
  
  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .grid-heading-{{ section.id }} {
    text-align: {{ heading_align_mobile }};
  }

  .grid-heading-{{ section.id }} * {
    margin: 0;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: {{ heading_height }}%;
    text-transform: unset;
  }

  .grid-items-{{ section.id }} {
    margin-top: {{ items_mt | times: 0.75 | round: 0 }}px;
    display: grid;
    align-items: start;
    grid: auto-flow dense {{ row_height_mobile }}px / repeat(1,minmax(0,1fr));
    row-gap: {{ items_gap_mobile }}px;
  }

  .grid-item-{{ section.id }} {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    padding: {{ block_padding_vertical_mobile }}px {{ block_padding_horizontal_mobile }}px;
    border-radius: {{ block_radius }}px;
    position: relative;
    overflow: hidden;
    text-decoration: none;
  }

  .grid-media-{{ section.id }} {
    flex: 1 0 auto;
    border-radius: {{ block_radius }}px;
  }

  .grid-media-{{ section.id }}:after {
    position: absolute;
    content: '';
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0, {{ block_overlay }});
    border-radius: {{ block_radius }}px;
  }

  .grid-media-{{ section.id }} img,
  .grid-media-{{ section.id }} > svg,
  .grid-media-{{ section.id }} iframe,
  .grid-media-{{ section.id }} video {
    display: block;
    object-fit: cover;
    width: 100%;
    height: 100%;
    box-shadow: none;
    border: 0px;
    border-radius: {{ block_radius }}px;
  }

  .grid-content-{{ section.id }} {
    flex: 1 0 auto;
    position: relative;
    z-index: 2;
    display: flex;
    gap: 20px;
    transform: translateX(-{{ block_padding_horizontal_mobile | plus: arrow_size_mobile }}px);
    transition: all 0.35s ease 0s;
  }

  .grid-item-{{ section.id }}:hover .grid-content-{{ section.id }} {
    transform: translateX(0px);
    transition: all 0.35s ease 0s;
  }

  .grid-content-{{ section.id }} svg {
    flex: 0 0 {{ arrow_size_mobile }}px;
    height: {{ arrow_size_mobile }}px;
    transform: rotate(180deg);
    opacity: 0;
    transition: all 0.35s ease 0s;
  }

  .grid-item-{{ section.id }}:hover .grid-content-{{ section.id }} svg {
    opacity: 1;
    transition: all 0.35s ease 0s;
  }

  .grid-item-heading-{{ section.id }} {
    margin: 0px;
    margin-top: {{ title_mt | times: 0.75 | round: 0 }}px;
    color: {{ title_color }};
    line-height: {{ title_height }}%;
    text-transform: unset;
    word-break: break-word;
  }

  .grid-item-subheading-{{ section.id }} {
    margin: 0px;
    font-size: {{ text_size_mobile }}px;
    color: {{ text_color }};
    line-height: {{ text_height }}%;
    text-transform: unset;
    word-break: break-word;
  }

  .grid-action-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    z-index: 2;
    border-radius: 50%;
    width: {{ action_size_mobile }}px;
    height: {{ action_size_mobile }}px;
    bottom: {{ block_padding_vertical_mobile | plus: 15 }}px;
    right: {{ block_padding_horizontal_mobile | plus: 15 }}px;
    background-color: {{ action_bg_color }};
  }

  .grid-action-{{ section.id }} svg {
    width: 14px;
    height: 14px;
  }

  .grid-action-{{ section.id }}.active .grid-pause-{{ section.id }},
  .grid-action-{{ section.id }} .grid-play-{{ section.id }} {
    display: none;
  }

  .grid-action-{{ section.id }}.active .grid-play-{{ section.id }} {
    display: block;
  }

  .grid-action-{{ section.id }} svg path {
    fill: {{ action_arrow_color }};
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .grid-heading-{{ section.id }} {
      text-align: {{ heading_align }};
    }

    .grid-heading-{{ section.id }} * {
      font-size: {{ heading_size }}px;
    }

    .grid-items-{{ section.id }} {
      margin-top: {{ items_mt }}px;
      gap: {{ items_gap }}px;
      --calculated-row-height: max(150px, min(100vw / 5, {{ row_height }}px));
      grid: auto-flow dense var(--calculated-row-height) / repeat(4,minmax(0,1fr));
    }

    .grid-item-{{ section.id }} {
      justify-content: space-between;
      flex-direction: row;
      grid-template-columns: repeat(2, 1fr);
      padding: {{ block_padding_vertical }}px {{ block_padding_horizontal }}px;
    }

    .grid-content-{{ section.id }} {
      transform: translateX(-{{ block_padding_horizontal | plus: arrow_size }}px);
    }

    .grid-content-{{ section.id }} svg {
      flex: 0 0 {{ arrow_size }}px;
      height: {{ arrow_size }}px;
    }

    .grid-item-heading-{{ section.id }} {
      margin-top: {{ title_mt }}px;
    }

    .grid-item-subheading-{{ section.id }} {
      font-size: {{ text_size }}px;
    }

    .grid-action-{{ section.id }} {
      bottom: {{ block_padding_vertical | plus: 10 }}px;
      right: {{ block_padding_horizontal | plus: 10  }}px;
      width: {{ action_size }}px;
      height: {{ action_size }}px;
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if heading_custom %}
  <style>
    .grid-heading-{{ section.id }} * {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if title_custom %}
  <style>
    .grid-item-heading-{{ section.id }} {
      font-family: {{ title_font.family }}, {{ title_font.fallback_families }};
      font-weight: {{ title_font.weight }};
      font-style: {{ title_font.style }};
    }
  </style>
{% endif %}

{% if text_custom %}
  <style>
    .grid-item-subheading-{{ section.id }} {
      font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
      font-weight: {{ text_font.weight }};
      font-style: {{ text_font.style }};
    }
  </style>
{% endif %}

{% for block in section.blocks %}
  <style>
    .grid-item-{{ block.id }} {
      border: {{ block_border_thickness }}px solid {{ block.settings.block_border_color }};
      background-color: {{ block.settings.block_bg_color }};
      grid-area: span min(2, {{ block.settings.row_width }}) / span min(2,{{ block.settings.column_width }});
    }

    .grid-item-{{ block.id }} .grid-item-heading-{{ section.id }} {
      font-size: {{ block.settings.title_size_mobile }}px;
    }

    {% if block.settings.override_colors %}
    .grid-item-{{ block.id }} .grid-item-heading-{{section.id}}, .grid-item-{{ block.id }} .grid-item-subheading-{{section.id}}, .grid-item-{{ block.id }} .grid-content-{{section.id}} svg path  {
      color: {{block.settings.block_text_color}};
      fill: {{block.settings.block_text_color}};
    }
    {% endif %}

    {% if block.settings.remove_overlay %}
      .grid-item-{{ block.id }} .grid-media-{{ section.id }}:after {
        background-color: rgba(0,0,0,0);
      }
    {% endif %}
    
    .grid-item-{{ block.id }} .grid-content-{{ section.id }} {
      align-items: {{ block.settings.align_content_mobile }};
    }

    @media(min-width: 1024px) {
      .grid-item-{{ block.id }} {
        grid-area: span {{ block.settings.row_width }} / span {{ block.settings.column_width }};
      }

      .grid-item-{{ block.id }} .grid-content-{{ section.id }} {
        align-items: {{ block.settings.align_content }};
      }
      
      .grid-item-{{ block.id }} .grid-item-heading-{{ section.id }} {
        font-size: {{ block.settings.title_size }}px;
      }
    }
  </style>

  {% unless block.settings.media_row %}
    <style>
      .grid-item-{{ block.id }} {
        display: flex;
        justify-content: end;
        flex-direction: column;
      }
     .grid-item-{{ block.id }} .grid-media-{{ section.id }} {
        position: absolute;
        left: -0.5%;
        right: 0;
        top: -0.5%;
        bottom: 0;
        width: 101%;
        height: 101%;
      }
      .grid-item-{{ block.id }} .grid-action-{{ section.id }} {
        bottom: {{ block_padding_vertical_mobile }}px;
        right: {{ block_padding_horizontal_mobile }}px;
      }
      @media(min-width: 1024px) {
        .grid-item-{{ block.id }} .grid-action-{{ section.id }} {
          bottom: {{ block_padding_vertical }}px;
          right: {{ block_padding_horizontal }}px;
        }
      }
    </style>
  {% endunless %}
  {% if block.settings.media_row %}
     <style>
      .grid-item-{{ block.id }} .grid-media-{{ section.id }} {
        max-height: 250px;
      }
      @media(min-width: 1024px) {
        .grid-item-{{ block.id }} .grid-media-{{ section.id }} {
          max-height: 100%;
        }
        .grid-item-{{ block.id }} .grid-content-{{ section.id }} {
          max-width: 50%;
        }
      }
     </style>
  {% endif %}
{% endfor %}

<div class="section-{{ section.id }} grid-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      {% if heading != blank %}
        <div class="grid-heading-{{ section.id }}">{{ heading }}</div>
      {% endif %}
      
      <div class="grid-items-{{ section.id }}">
        {% for block in section.blocks %}
          <{% if block.settings.url != blank %}a href="{{ block.settings.url }}"{% else %}div{% endif %} class="grid-item-{{ section.id }} grid-item-{{ block.id }}">
            <div class="grid-content-{{ section.id }}">
              <svg width="48" height="48" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true"><path fill="{{ arrow_color }}" fill-rule="evenodd" clip-rule="evenodd" d="M4,12l8,8,1.41-1.41L7.83,13H20V11H7.83l5.59-5.59L12,4Z"></path></svg>
              <div class="grid-text-{{ section.id }}">
                {% if block.settings.sub_heading != blank %}
                  <p class="grid-item-subheading-{{ section.id }}">{{ block.settings.sub_heading }}</p>
                {% endif %}
                {% if block.settings.heading != blank %}
                  <p class="grid-item-heading-{{ section.id }}">{{ block.settings.heading }}</p>
                {% endif %}
              </div>
            </div>
            <div class="grid-media-{{ section.id }}">
              {% if block.settings.bg_type == "image" %}
                {% if block.settings.image != blank %}
                  <img src="{{ block.settings.image | image_url }}" alt="{{ block.settings.image.alt }}" {% if lazy %}lazy="loading"{% endif %}>
                {% else %}
                  {{ 'image' | placeholder_svg_tag }}
                {% endif %}
              {% elsif block.settings.bg_type == "video" %}
                {% assign video_id =  block.settings.video.id | default: block.settings.video_url.id %}
                {% assign loop = '&loop=1&playlist=' | append: video_id %} 
                {%- if block.settings.video == null and block.settings.video_url != null -%}
                    
                    {%- if block.settings.video_url.type == 'youtube' -%}
                      <iframe
                        src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1&mute=1{{ loop }}"
                        class="js-youtube"
                        allow="autoplay; encrypted-media"
                        allowfullscreen
                        title="Fixed Video"
                      ></iframe>
                    {%- else -%}
                      <iframe
                        src="https://player.vimeo.com/video/{{ video_id }}?enablejsapi=1&autoplay=1&mute=1{{ loop }}"
                        class="js-vimeo"
                        allow="autoplay; encrypted-media"
                        allowfullscreen
                        title="Fixed Video"
                      ></iframe>
                    {% endif %}
                  
                  {% else %}
                      
                    {{ block.settings.video | video_tag: controls: false, autoplay: true, loop: true, playsinline: true }}
                      
                  {% endif %}
                {% endif %}
                {% if block.settings.bg_type == "video" %}
                  <div class="grid-action-{{ section.id }}">
                    <svg class="grid-pause-{{ section.id }}" width="12" height="14" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg" role="img"><title>Pause</title><path d="M0 0H4V14H0V0Z" fill="currentColor"></path><path d="M8 0H12V14H8V0Z" fill="currentColor"></path></svg>
                    <svg class="grid-play-{{ section.id }}" width="12" height="14" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg" role="img"><title>Play</title><path d="M12 7L0 14L6.1196e-07 0L12 7Z" fill="currentColor"></path></svg>
                  </div>
                {% endif %}
              </div>
          </{% if block.settings.url != blank %}a{% else %}div{% endif %}>
        {% endfor %}
      </div>
    </div>
</div>

<script>
  function initGridPro() {
    let items = document.querySelectorAll('.grid-item-{{ section.id }}');
    items.forEach(el => {
      let btn = el.querySelector('.grid-action-{{ section.id }}');
      let video = el.querySelector('video');
      let frame = el.querySelector('iframe');
      if(btn) {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          btn.classList.toggle('active');
          if(btn.classList.contains('active')){
            if(video) {
              video.pause();
            }
            if(frame) {
              frame.contentWindow.postMessage('{"event":"command","func":"' + 'stopVideo' + '","args":""}', '*');
            } 
          } else {
           if(video) {
              video.play();
            }
            if(frame) {
              frame.contentWindow.postMessage('{"event":"command","func":"' + 'playVideo' + '","args":""}', '*');
            } 
          }
        })
      }
    })
  }
  
  document.addEventListener('DOMContentLoaded', initGridPro);
  
  if (Shopify.designMode) {
     document.addEventListener('shopify:section:unload', initGridPro);
     document.addEventListener('shopify:section:load', initGridPro);
  }
</script>

{% schema %}
  {
    "name": "SS - Grid Pro",
    "settings": [
      {
        "type": "header",
        "content": "Heading"
      },
      {
        "type": "richtext",
        "id": "heading",
        "label": "Heading",
        "default": "<h2>Grid Pro</h2>"
      },
      {
        "type": "checkbox",
        "id": "heading_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Heading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size",
        "default": 40
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size - Mobile",
        "default": 30
      },
      {
        "type": "range",
        "id": "heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Heading Line Height",
        "default": 150
      },
      {
        "type": "select",
        "id": "heading_align",
        "label": "Heading Text Align",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "select",
        "id": "heading_align_mobile",
        "label": "Heading Text Align - Mobile",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "header",
        "content": "Grid Layout Settings"
      },
      {
        "type": "range",
        "id": "items_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap",
        "default": 20
      },
      {
        "type": "range",
        "id": "items_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap - Mobile",
        "default": 20
      },
      {
        "type": "range",
        "id": "items_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Row Max-Height",
        "info": "Define the height of a single row, from which the grid is dinamically created."
      },
      {
        "type": "range",
        "id": "row_height",
        "min": 150,
        "max": 400,
        "step": 10,
        "unit": "px",
        "label": "Desktop Row Max-Height",
        "default": 300
      },
      {
        "type": "range",
        "id": "row_height_mobile",
        "min": 120,
        "max": 260,
        "step": 10,
        "unit": "px",
        "label": "Mobile Row Height",
        "default": 200
      },
      {
        "type": "header",
        "content": "Grid Block Settings"
      },
      {
        "type": "range",
        "id": "block_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Padding Vertical",
        "default": 20
      },
      {
        "type": "range",
        "id": "block_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Padding Vertical - Mobile",
        "default": 20
      },
      {
         "type": "range",
         "id": "block_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Block Padding Horizontal",
         "default": 16
      },
      {
         "type": "range",
         "id": "block_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Block Padding Horizontal - Mobile",
         "default": 16
      },
      {
         "type": "range",
         "id": "block_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Block Border Radius",
         "default": 8
      },
      {
         "type": "range",
         "id": "block_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Block Border Thickness",
         "default": 0
      },
      {
         "type": "range",
         "id": "block_overlay",
         "min": 0,
         "max": 1,
         "step": 0.1,
         "unit": "px",
         "label": "Block Overlay",
         "default": 0.2
      },
      {
        "type": "header",
        "content": "Grid Block Heading"
      },
      {
        "type": "checkbox",
        "id": "title_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "title_font",
        "label": "Block Heading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "title_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Block Heading Line Height",
        "default": 130
      },
      {
        "type": "range",
        "id": "title_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Heading Margin Top",
        "default": 4
      },
      {
        "type": "header",
        "content": "Grid Block Subheading"
      },
      {
        "type": "checkbox",
        "id": "text_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Block Subheading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Block Subheading Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "text_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Block Subheading Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Block Subheading Line Height",
        "default": 130
      },
      {
        "type": "header",
        "content": "Grid Block Content Arrow Settings"
      },
      {
        "type": "range",
        "id": "arrow_size_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Arrow Size - Mobile",
        "default": 48
      },
      {
        "type": "range",
        "id": "arrow_size",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Arrow Size",
        "default": 48
      },
      {
        "type": "header",
        "content": "Grid Block Action Settings"
      },
      {
        "type": "range",
        "id": "action_size_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Action Size - Mobile",
        "default": 60
      },
      {
        "type": "range",
        "id": "action_size",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Block Action Size",
        "default": 60
      },
      {
        "type": "header",
        "content": "Grid Block Colors"
      },
      {
        "type": "color",
        "label": "Block Heading Color",
        "id": "title_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Block Subheading Color",
        "id": "text_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Block Content Arrow Color",
        "id": "arrow_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Block Action Background Color",
        "id": "action_bg_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Block Action Arrow Color",
        "id": "action_arrow_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Heading Color",
        "id": "heading_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 36
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      },
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full Width",
        "default": false
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 0,
        "max": 400,
        "step": 10,
        "unit": "rem",
        "label": "Section content width",
        "default": 160
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "item",
        "name": "Grid Item",
        "settings": [
          {
            "type": "header",
            "content": "Layout Settings",
            "info": "Only for Desktop"
          },
          {
            "type": "range",
            "id": "column_width",
            "min": 1,
            "max": 4,
            "step": 1,
            "label": "Column",
            "default": 2
          },
          {
            "type": "range",
            "id": "row_width",
            "min": 1,
            "max": 3,
            "step": 1,
            "label": "Row",
            "default": 2
          },
          {
            "type": "header",
            "content": "Content Settings"
          },
          {
            "type": "select",
            "id": "bg_type",
            "label": "Background Type",
            "default": "image",
            "options": [
              {
                "label": "Image",
                "value": "image"
              },
              {
                "label": "Video",
                "value": "video"
              },
              {
                "label": "Background",
                "value": "background"
              }
            ]
          },
          {
            "type": "image_picker",
            "label": "Background Image",
            "id": "image"
          },
          {
            "type": "video",
            "id": "video",
            "label": "Background Video from Shopify"
          },
          {
            "type": "video_url",
            "id": "video_url",
            "label": "Background Video Embed from Url",
            "accept": ["youtube", "vimeo"],
            "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
            "info": "Shows when no Shopify-hosted video is selected."
          },
          {
            "type": "checkbox",
            "label": "Media in Row",
            "id": "media_row",
            "default": false
          },
          {
            "type": "select",
            "id": "align_content",
            "label": "Vertical Align Content",
            "default": "end",
            "options": [
              {
                "label": "Top",
                "value": "start"
              },
              {
                "label": "Center",
                "value": "center"
              },
              {
                "label": "Bottom",
                "value": "end"
              }
            ]
          },
          {
            "type": "select",
            "id": "align_content_mobile",
            "label": "Vertical Align Content - Mobile",
            "default": "end",
            "options": [
              {
                "label": "Top",
                "value": "start"
              },
              {
                "label": "Center",
                "value": "center"
              },
              {
                "label": "Bottom",
                "value": "end"
              }
            ]
          },
          {
            "type": "url",
            "id": "url",
            "label": "URL"
          },
          {
            "type": "header",
            "content": "Subheading Settings"
          },
          {
            "type": "text",
            "id": "sub_heading",
            "label": "Subheading",
            "default": "Subheading"
          },
          {
            "type": "header",
            "content": "Heading Settings"
          },
          {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Heading"
          },
          {
            "type": "range",
            "id": "title_size",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Heading Size",
            "default": 36
          },
          {
            "type": "range",
            "id": "title_size_mobile",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Heading Size - Mobile",
            "default": 24
          },
          {
            "type": "header",
            "content": "Grid Block Colors"
          },
          {
            "type": "color",
            "label": "Block Background Color",
            "id": "block_bg_color",
            "default": "#F3F3F3"
          },
          {
            "type": "color",
            "label": "Block Border Color",
            "id": "block_border_color",
            "default": "#000000"
          },
          {
            "type": "checkbox",
            "id": "override_colors",
            "label": "Override text colors in section settings",
            "default": false
          },
          {
            "type": "color",
            "label": "Block Text Colors",
            "id": "block_text_color",
            "default": "#FFFFFF"
          },
          {
            "type": "header",
            "content": "Overlay"
          },
          {
            "type": "checkbox",
            "id": "remove_overlay",
            "label": "Remove background overlay",
            "default": false
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "SS - Grid Pro",
        "blocks": [
          {
            "type": "item",
            "settings": {
              "column_width": 3,
              "row_width": 3
            }
          },
          {
            "type": "item",
            "settings": {
              "column_width": 1,
              "row_width": 3
            }
          },
          {
            "type": "item",
            "settings": {
              "column_width": 4,
              "bg_type": "video",
              "media_row": true
            }
          },
          {
            "type": "item"  
          },
          {
            "type": "item"  
          }
        ]
      }
    ]
  }
{% endschema %}